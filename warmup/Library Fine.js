function processData(input) {
  var result,
      dates = input.split('\n'),
      ret = (dates[0].split(' ')).map(Number),
      due = dates[1].split(' ').map(Number),
      ys = ret[2]-due[2],
      ms = ret[1]-due[1],
      ds = ret[0]-due[0];
      if (ys>0){
        result = 10000*ys;
      } else if (ys < 0) {
        result = 0;
      } else if (ms>0){
        result = 500*ms;
      } else if (ms<0){
        result = 0;
      } else if (ds>0){
        result = 15*ds;
      } else {
        result = 0;
      }
      // console.log(ret,due,ys,ms,ds);
  // process.stdout.write(""+result+"\n");
  return result
}

function assert (i,res,expect) {
  if (res !== expect){
    console.log(i,"[FAIL] Expected:", expect, ' Result: ', res);
  }
}

process.stdin.resume();
process.stdin.setEncoding("ascii");
_input = [
            ["9 6 2015\n6 6 2015",45],
            ['14 7 2015\n12 7 2015', 30],
            ['12 7 2015\n6 7 2015', 90],
            ['5 7 2015\n3 7 2015', 30],
            ['2 7 2015\n2 7 2015', 0],
            ['2 7 2015\n26 6 2015', 500],
            ['24 6 2015\n22 6 2015', 30],
            ['21 6 2015\n21 6 2015', 0],
            ['21 6 2015\n19 6 2015', 30],
            ['16 6 2015\n15 6 2015', 15],
            ['10 6 2015\n9 6 2015', 15],
            ['8 6 2015\n4 6 2015', 60],
            ['2 6 2015\n30 5 2015', 500],
            ['29 5 2015\n27 5 2015', 30],
            ['24 5 2015\n23 5 2015', 15],
            ['22 5 2015\n14 5 2015', 120],
            ['14 5 2015\n12 5 2015', 30],
            ['12 5 2015\n10 5 2015', 30],
            ['7 5 2015\n6 5 2015', 15],
            ['5 5 2015\n2 5 2015', 45],
            ['2 5 2015\n17 4 2015', 500],
            ['14 4 2015\n14 4 2015', 0],
            ['13 4 2015\n12 4 2015', 15],
            ['6 4 2015\n5 4 2015', 15],
            ['4 4 2015\n2 4 2015', 30],
            ['1 4 2015\n1 4 2015', 0],
            ['31 3 2015\n29 3 2015',30 ],
            ['27 3 2015\n25 3 2015', 30],
            ['23 3 2015\n13 3 2015', 150],
            ['11 3 2015\n7 3 2015', 60],
            ['2 3 2015\n28 2 2015', 500],
            ['27 2 2015\n19 2 2015', 120],
            ['19 2 2015\n18 2 2015', 15],
            ['17 2 2015\n17 2 2015', 0],
            ['17 2 2015\n16 2 2015', 15],
            ['16 2 2015\n15 2 2015', 15],
            ['13 2 2015\n12 2 2015', 15],
            ['7 2 2015\n7 2 2015', 0],
            ['4 2 2015\n3 2 2015', 15],
            ['3 2 2015\n3 2 2015', 0],
            ['1 2 2015\n30 1 2015', 500],
            ['29 1 2015\n29 1 2015', 0],
            ['27 1 2015\n24 1 2015', 45],
            ['22 1 2015\n21 1 2015', 15],
            ['20 1 2015\n20 1 2015', 0],
            ['19 1 2015\n15 1 2015', 60],
            ['12 1 2015\n10 1 2015', 30],
            ['8 1 2015\n7 1 2015', 15],
            ['7 1 2015\n6 1 2015', 15],
            ['6 1 2015\n3 1 2015', 45],
            ['2 1 2015\n1 1 2015', 15],
            ['2 1 2000\n1 1 2015', 0],
            ['1 1 2015\n31 12 2014', 10000],
            ['3 6 1\n20 9 3000', 0],
            ['31 2 2015\n28 2 2015', 45],
            ['29 1 2015\n29 6 2015', 0],
            ['31 5 2015\n1 6 2015', 0],
            ['1 1 2015\n5 6 2000', 150000],
            ['5 6 2015\n1 1 2000', 150000],
            ['3 6 3000\n20 9 1', 29990000]
          ];

process.stdin.on("data", function (input) {
    _input += input;
});

process.stdin.on("end", function () {
   var r;
   for (var i = 0; i < _input.length; i++){
     assert(i,processData(_input[i][0]), _input[i][1]);
   }
});